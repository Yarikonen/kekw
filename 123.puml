@startuml
abstract class item {
- String name
- destr Type
- String condition
+ <<Create>> item(String,destr)
+ String get_name()
+ boolean equals(Object)
- void set_condition()
+ String get_condition()
+ String toString()
+ int hashCode()
}
abstract class person {
- String name
- int age
+ <<Create>> person(String)
+ <<Create>> person(String,int)
+ String toString()
+ String get_name()
+ {abstract}void walks()
+ String get_age()
+ {abstract}void talks()
+ boolean equals(Object)
+ int hashCode()
}
class can {
+ <<Create>> can()
+ void prints()
+ void usable(String)
}
interface surroundings {
~ void surround()
}
interface printable {
~ void prints()
}
class Lake {
~ <<Create>> Lake()
+ void walks()
+ void talks()
}
class Main {
+ {static} void main(String[])
}
class lagerix {
- String owner
- String ownerprof
~ <<Create>> lagerix()
+ void surround()
+ boolean equals(Object)
+ int hashCode()
+ void prints()
+ String get_owner()
}
class metal_can {
+ <<Create>> metal_can()
+ void prints()
+ void notfunny(String)
}
class matches {
+ <<Create>> matches()
+ void prints()
+ void fire(String)
}
class Gedni {
~ <<Create>> Gedni()
+ void crazy_things()
+ void talks()
+ String toString()
+ void walks()
}
abstract class place {
- String type
- String curr
+ <<Create>> place(String)
+ <<Create>> place(String,String)
+ void prints()
+ String get_name()
+ String get_sost()
+ boolean equals(Object)
+ int hashCode()
+ String toString()
}
class Бумага {
+ <<Create>> Бумага()
+ void prints()
+ void show(Boolean)
}
class battery {
+ <<Create>> battery()
+ void prints()
+ void discharded()
}
class tent {
+ <<Create>> tent()
+ void prints()
+ void zhiv(boolean)
}
interface crazy {
~ void crazy_things()
}


printable <|.. item
printable <|.. can
item <|-- can
person <|-- Lake
surroundings <|.. lagerix
place <|-- lagerix
printable <|.. metal_can
item <|-- metal_can
printable <|.. matches
item <|-- matches
crazy <|.. Gedni
person <|-- Gedni
printable <|.. place
printable <|.. Бумага
item <|-- Бумага
printable <|.. battery
item <|-- battery
printable <|.. tent
item <|-- tent
@enduml